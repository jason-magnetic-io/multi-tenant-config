version: 2.1
defaults: &defaults
  docker:
    - image: vampio/kmt:circleci-0.2.0
orbs:
  gcp-cli: circleci/gcp-cli@1.1.0
  kubernetes: circleci/kubernetes@0.1.0
jobs:
  create-env:
    <<: *defaults
    steps:
      - checkout
      - gcp-cli/install
      - gcp-cli/initialize
      - kubernetes:install
      - run:
          name: Connect to cluster
          command: |
            gcloud --quiet container clusters get-credentials $GOOGLE_CLUSTER_NAME
            kubectl get namespaces
      - run:
          name: Create tenant environment
          command: |
            set +e
            ns=`kubectl get namespace ${ENVIRONMENT_NAMESPACE} --no-headers --output=go-template={{.metadata.name}} 2>/dev/null`
            if [ -z "${ns}" ]; then
              kubectl create namespace ${ENVIRONMENT_NAMESPACE}
            else
              # remove vamp artifacts
              kubectl --namespace ${ENVIRONMENT_NAMESPACE} delete deployment,service vamp-gateway-agent 2>/dev/null
              kubectl --namespace ${ENVIRONMENT_NAMESPACE} delete deployment vamp-workflow-quantification 2>/dev/null
            fi
            set -e
            LIFTER_POD=$(kubectl --namespace ${VAMP_KUBERNETES_NAMESPACE} get pods -l app=lifter --output=go-template='{{range .items}}{{.metadata.name}}{{"\n"}}{{end}}' 2>/dev/null)
            kubectl --namespace ${VAMP_KUBERNETES_NAMESPACE} exec ${LIFTER_POD} -- curl -s -o /dev/null -X PUT -H "Content-Type: application/json" -d "{}" http://127.0.0.1:8081/api/namespaces/vampio-organization-cctest
            kubectl --namespace ${VAMP_KUBERNETES_NAMESPACE} exec ${LIFTER_POD} -- curl -s -o /dev/null -X POST -H "Content-Type: application/json" -d '{"artifacts":{"/usr/local/vamp/artifacts/breeds/quantification.yml":true,"/usr/local/vamp/artifacts/workflows/quantification.yml":true,"/usr/local/vamp/artifacts/breeds/vamp-workflow-javascript.yml":true},"persistence":true,"pulse":true,"key_value":true,"namespace":false}' http://127.0.0.1:8081/api/namespaces/vampio-organization-cctest/setup
      - run:
          name: Restart Vamp
          command: |
            kubectl --namespace ${VAMP_KUBERNETES_NAMESPACE} delete pods -l app=vamp
            kubectl --namespace ${VAMP_KUBERNETES_NAMESPACE} rollout status deployment.v1beta1.apps/vamp
      - run:
          name: Deploy VGAs
          command: |
            LIFTER_POD=$(kubectl --namespace ${VAMP_KUBERNETES_NAMESPACE} get pods -l app=lifter --output=go-template='{{range .items}}{{.metadata.name}}{{"\n"}}{{end}}' 2>/dev/null)
            kubectl --namespace ${VAMP_KUBERNETES_NAMESPACE} exec ${LIFTER_POD} -- curl -s -X GET -o ./vga.yml http://127.0.0.1:8081/api/vga
            kubectl --namespace ${VAMP_KUBERNETES_NAMESPACE} exec ${LIFTER_POD} -- curl -s -o /dev/null -X POST --data-binary "@/vga.yml" http://127.0.0.1:8081/api/namespaces/vampio-organization-cctest/vga

  deploy-gateways:
    docker:
      - image: node:latest
    steps:
      - checkout
      - run:
          name: Connect to Vamp
          command: |
            vamp create gateway -f sava-product-gw.yml
      
workflows:
  version: 2
  create-env-deploy-gateways:
    jobs:
      - create-env
      - deploy-gateways:
          requires:
            - create-env
          filters:
            branches:
              only: master
